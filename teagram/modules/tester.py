import io
import logging
from datetime import datetime

from pyrogram import Client, types

from .. import loader, logger, utils


@loader.module(name="Tester", author="teagram")
class TesterMod(loader.Module):
    """–¢–µ—Å—Ç —á–µ–≥–æ-—Ç–æ"""
    async def logscmd(self, app: Client, message: types.Message, args: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: logs <—É—Ä–æ–≤–µ–Ω—å>"""
        lvl = 40  # ERROR

        if args and not (lvl := logger.get_valid_level(args)):
            return await utils.answer(
                message, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤")

        handler = logging.getLogger().handlers[0]
        logs = ("\n".join(handler.dumps(lvl))).encode("utf-8")
        if not logs:
            return await utils.answer(
                message, f"‚ùï –ù–µ—Ç –ª–æ–≥–æ–≤ –Ω–∞ —É—Ä–æ–≤–Ω–µ {lvl} ({logging.getLevelName(lvl)})")

        logs = io.BytesIO(logs)
        logs.name = "teagram.log"

        await message.delete()
        return await utils.answer(
            message, logs, doc=True, quote=False,
            caption=f"üì§ Teagram–õ–æ–≥–∏ —Å {lvl} ({logging.getLevelName(lvl)}) —É—Ä–æ–≤–Ω–µ–º"
        )