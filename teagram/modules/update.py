import os
import sys
import atexit
import logging

from pyrogram import Client, types
from subprocess import check_output
from .. import loader, utils


@loader.module(name="updater")
class UpdateMod(loader.Module):
    """üçµ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –≥–∏—Ç–∞ teagram"""

    async def update_cmd(self, app: Client, message: types.Message):
        try:
            output = check_output('git pull', shell=True).decode()
            
            if 'Already up to date.' in output:
                return await utils.answer(message, '`üçµ | TeaGram`\n<b>–£ –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è</b>')
            
            def restart() -> None:
                os.execl(sys.executable, sys.executable, "-m", "teagram")

            atexit.register(restart)
            self.db.set(
                "teagram.loader", "restart", {
                    "msg": f"{message.chat.id}:{message.id}",
                    "type": "restart"
                }
            )

            await utils.answer(message, "üîÅ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...")

            logging.info("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...")
            return sys.exit(0)
        except Exception as error:
            await utils.answer(message, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}')
